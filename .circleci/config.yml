---
version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1
  cypress: cypress-io/cypress@1
jobs:
  test:
    working_directory: ~/glaze
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install JS Dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ~/glaze/node_modules
      - run:
          name: JS Static Analysis
          command: npm run-script prettier
      - run:
          name: JS Tests
          command: |
            npm run-script ci
      - store_artifacts:
          path: /tmp/test-results
          destination: tests
  deploy:
    working_directory: ~/glaze
    docker:
      - image: cimg/python:3.9.4-node
    steps:
      - checkout
      - run:
          name: Set DEPLOY_TAG from branch name
          command: |
            if [[ $CIRCLE_BRANCH == "master" ]]; then
              echo "export DEPLOY_TAG=production" >> $BASH_ENV
            else
              echo "export DEPLOY_TAG=$(echo $CIRCLE_BRANCH | awk -F/ '{print $NF}')" >> $BASH_ENV
            fi
      - run:
          name: Set AWS credentials
          command: |
            echo "export AWS_ACCESS_KEY_ID=\$${DEPLOY_TAG}_AWS_ACCESS_KEY_ID" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=\$${DEPLOY_TAG}_AWS_SECRET_ACCESS_KEY" >> $BASH_ENV
      - aws-cli/install
      - aws-cli/setup
      - run:
          name: Build and Deploy
          command: deploy/build
      - run:
          name: Set FEN_DISTRIBUTION_ID
          command: |
            echo "export FEN_DISTRIBUTION_ID=\$${DEPLOY_TAG}_FEN_DISTRIBUTION_ID" >> $BASH_ENV
      - run:
          name: "Invalidate CloudFront Cache"
          command: |
            aws cloudfront create-invalidation --distribution-id ${FEN_DISTRIBUTION_ID} --invalidation-batch "Paths={Quantity=1,Items=[/*]},CallerReference=$(date +%Y%m%d%H%M%S)"
workflows:
  ci:
    jobs:
      - test
      - cypress/install:
          executor: cypress/base-12
      - cypress/run:
          requires:
            - cypress/install
          executor: cypress/base-12
          start: HTTPS=false HOST=localhost PORT=3000 SSL_CERT= SSL_KEY= npm run-script start | tee /var/log/ci.log 2>&1
          wait-on: "http://localhost:3000"
          command: npx cypress run --config-file false --config defaultCommandTimeout=8000 --env host=localhost,port=3000
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - /^deploy\/.+/
                - /^fen\/.+/
